// PRODUCT.JS

// const productId = window.location.search.split("?id=").join("");

// const params = fetch("http://localhost:3000/api/products/" + productId)
//   .then((response) => response.json())
//   .then((productData) => {
//     //CONST = CREATE ELEMENT

//     const productImage = document.createElement("img");
//     const productTitle = document.createElement("h1");
//     const productDescription = document.createElement("p");
//     const productPrice = document.createElement("span");
//     //let colorSelector = document.getElementById("colors");
//     let newOption = document.createElement("option");
//     const tableauColor = productData.colors;
//     // const productPageTitle = document.title;
//     // IMPLEMENTATION NOM

//     document.title = productData.name;

//     // IMPLEMENTATION IMAGE

//     productImage.src = productData.imageUrl;
//     productImage.alt = productData.altTxt;
//     image.append(productImage);

//     // IMPLEMENTATION H1

//     productTitle.textContent = productData.name;
//     title.append(productTitle);

//     // IMPLEMENTATION DESCRIPTION

//     productDescription.textContent = productData.description;
//     description.append(productDescription);

//     // IMPLEMENTATION PRIX

//     productPrice.textContent = productData.price;
//     price.append(productPrice);

//     // IMPLEMENTATION OPTION COLOR

//     for (let element of tableauColor) {
//       let newColor = new Option(element);
//       newOption.setAttribute("value", element);
//       const select = document.querySelector("select");
//       select.add(newColor, undefined);
//     }
//   });








CART.JS


// Save Basket

const saveBasket = (basket) => {
  console.log("saveBasket");
  localStorage.setItem("basket", JSON.stringify(basket));
};

// ????

const cartArticle = document.createElement("article");
let storage = JSON.parse(localStorage.getItem("basket"));
cartArticle.innerHTML = storage.id;
let cart = document.getElementById("cart__items");

// Quantity

const getTotalQuantity = () => {
  const totalQuantityHtml = document.getElementById("totalQuantity");
  totalQuantityHtml.innerHTML = totalQuantity;
  let totalQuantity = 0;
  for (const element of storage) {
    totalQuantity += parseInt(element.quantity);
  }
};

// const getTotalPrice = () => {
//   const totalPriceHtml = document.getElementById("totalPrice");
//   totalPriceHtml.innerHTML = totalPrice;
//   for (const element of storage) {
//     totalPrice += parseInt(element.price);
//   }
// };

// Display items in cart

const getItemsCart = () => {
  for (const element of storage) {
    fetch("http://localhost:3000/api/products/" + element.id)
      .then((response) => response.json())
      .then((response) => {
        let totalPrice = 0;

        totalPrice += parseInt(element.quantity) * response.price;

        document.getElementById("totalPrice").innerHTML = totalPrice;

        cart.innerHTML += `<article class="cart__item" data-id="${response._id}" data-color="${element.color}">
      <div class="cart__item__img">
        <img src="${response.imageUrl}" alt="${response.altTxt}">
      </div>
      <div class="cart__item__content">
        <div class="cart__item__content__description">
          <h2>${response.name} </h2>
          <p>${element.color}</p>
          <p> ${response.price} €</p>
        </div>
        <div class="cart__item__content__settings">
          <div class="cart__item__content__settings__quantity">
            <p>Qté : </p>
            <input type="number" class="itemQuantity" name="itemQuantity" min="1" max="100" value="${element.quantity}">
          </div>
          <div class="cart__item__content__settings__delete">
            <p class="deleteItem" onclick="deleteItem('${element.color}','${response._id}', this)">Supprimer</p>
          </div>
        </div>
      </div>
      </article>`;
      });
  }
};
// Redirige vers la page du panier

getItemsCart();

// Remove cart product quantities

const deleteItem = (color, id, ctx) => {
  let foundProduct = storage.findIndex((p) => p.id == id && color === p.color);

  if (foundProduct == -1) {
    return;
  }
  storage.splice(foundProduct, 1);
  localStorage.setItem("basket", JSON.stringify(storage));
  console.log(ctx);
  ctx.parentElement.parentElement.parentElement.parentElement.remove();
};

// Modify cart product quantities

const modifyQuantity = () => {
  let quantity = document.getElementsByClassName("itemQuantity").value;
};

modifyQuantity();


///////////////////PRODUCT.JS/////////////

/******************************** PAGE PRODUIT ********************************/
const productId = window.location.search.split("?id=").join("");

fetch("http://localhost:3000/api/products/" + productId)
  .then((response) => response.json())
  .then((productData) => {
    // Create element

    const productImage = document.createElement("img");
    const productTitle = document.createElement("h1");
    const productDescription = document.createElement("p");
    const productPrice = document.createElement("span");
    let newOption = document.createElement("option");
    const tabColor = productData.colors;

    // Implementation name

    document.title = productData.name;

    // Implementation image

    productImage.src = productData.imageUrl;
    productImage.alt = productData.altTxt;
    image.append(productImage);

    // Implementation H1

    productTitle.textContent = productData.name;
    title.append(productTitle);

    // Implementation description

    productDescription.textContent = productData.description;
    description.append(productDescription);

    // Implementation price

    productPrice.textContent = productData.price;
    price.append(productPrice);

    // Implementation option color

    for (let element of tabColor) {
      let newColor = new Option(element);
      newOption.setAttribute("value", element);
      const select = document.querySelector("select");
      select.add(newColor, undefined);
    }

    // Add to card button

    const addToCartButton = document.querySelector("#addToCart"); // Assurez-vous que ce bouton existe dans votre HTML
    addToCartButton.addEventListener("click", () => {
      const selectedColor = document.querySelector("#colors").value;
      const quantity = parseInt(document.querySelector("#quantity").value, 10);

      if (!selectedColor || quantity <= 0) {
        alert("Veuillez sélectionner une couleur et une quantité valide.");
        return;
      }

      const cart = JSON.parse(localStorage.getItem("cart")) || [];
      const existingProduct = cart.find(
        (item) => item.id === productId && item.color === selectedColor
      );

      if (existingProduct) {
        existingProduct.quantity += quantity;
      } else {
        cart.push({ id: productId, color: selectedColor, quantity });
      }

      localStorage.setItem("cart", JSON.stringify(cart));

      window.location.href = "./cart.html";
    });
  });
